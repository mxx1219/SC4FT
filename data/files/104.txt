package org.ballerinalang.net.jms.nativeimpl.endpoint.session;
import org.ballerinalang.bre.Context;
import org.ballerinalang.bre.bvm.CallableUnitCallback;
import org.ballerinalang.connector.api.BLangConnectorSPIUtil;
import org.ballerinalang.connector.api.Struct;
import org.ballerinalang.model.types.TypeKind;
import org.ballerinalang.model.values.BMap;
import org.ballerinalang.model.values.BString;
import org.ballerinalang.model.values.BValue;
import org.ballerinalang.natives.annotations.Argument;
import org.ballerinalang.natives.annotations.BallerinaFunction;
import org.ballerinalang.natives.annotations.Receiver;
import org.ballerinalang.natives.annotations.ReturnType;
import org.ballerinalang.net.jms.AbstractBlockinAction;
import org.ballerinalang.net.jms.Constants;
import org.ballerinalang.net.jms.utils.BallerinaAdapter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.jms.JMSException;
import javax.jms.Queue;
import javax.jms.Session;
@BallerinaFunction(orgName="ballerina",packageName="jms",functionName="createQueue",receiver=@Receiver(type=TypeKind.OBJECT,structType="Session",structPackage="ballerina/jms"),args={@Argument(name="name",type=TypeKind.STRING)},returnType={@ReturnType(type=TypeKind.OBJECT,structPackage="ballerina/jms",structType="Destination")},isPublic=true) public class CreateQueue extends AbstractBlockinAction {
  public static final Logger LOGGER=LoggerFactory.getLogger(CreateQueue.class);
  @Override public void execute(  Context context,  CallableUnitCallback callableUnitCallback){
    Struct sessionBObject=BallerinaAdapter.getReceiverObject(context);
    Session session=BallerinaAdapter.getNativeObject(sessionBObject,Constants.JMS_SESSION,Session.class,context);
    String queueName=context.getStringArgument(0);
    Queue jmsDestination;
    BMap<String,BValue> bStruct=BLangConnectorSPIUtil.createBStruct(context,Constants.BALLERINA_PACKAGE_JMS,Constants.JMS_DESTINATION_STRUCT_NAME);
    try {
      jmsDestination=session.createQueue(queueName);
      bStruct.addNativeData(Constants.JMS_DESTINATION_OBJECT,jmsDestination);
      bStruct.put(Constants.DESTINATION_NAME,new BString(jmsDestination.getQueueName()));
      bStruct.put(Constants.DESTINATION_TYPE,new BString("queue"));
    }
 catch (    JMSException e) {
      BallerinaAdapter.returnError("Failed to create queue destination.",context,e);
    }
    context.setReturnValues(bStruct);
  }
}
