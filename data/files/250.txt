package com.galenframework.speclang2.reader.pagespec;
import com.galenframework.page.Page;
import com.galenframework.parser.FileSyntaxException;
import com.galenframework.parser.IndentationStructureParser;
import com.galenframework.parser.StructNode;
import com.galenframework.parser.SyntaxException;
import com.galenframework.specs.page.Locator;
import com.galenframework.specs.reader.page.PageSpec;
import com.galenframework.specs.reader.page.SectionFilter;
import com.galenframework.utils.GalenUtils;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Map;
import java.util.Properties;
public class PageSpecReader {
  public PageSpec read(  String path,  Page page,  SectionFilter sectionFilter,  Properties properties,  Map<String,Object> jsVariables,  Map<String,Locator> objects) throws IOException {
    String contextPath=GalenUtils.getParentForFile(path);
    InputStream stream=GalenUtils.findFileOrResourceAsStream(path);
    if (stream == null) {
      throw new FileNotFoundException(path);
    }
    return read(stream,path,contextPath,page,sectionFilter,properties,jsVariables,objects);
  }
  public PageSpec read(  InputStream inputStream,  String source,  String contextPath,  Page page,  SectionFilter sectionFilter,  Properties properties,  Map<String,Object> jsVariables,  Map<String,Locator> objects) throws IOException {
    try {
      IndentationStructureParser structParser=new IndentationStructureParser();
      List<StructNode> structs=structParser.parse(inputStream,source);
      PageSpec pageSpec=new PageSpec(objects);
      PageSpecHandler pageSpecHandler=new PageSpecHandler(pageSpec,page,sectionFilter,contextPath,properties,jsVariables);
      List<StructNode> allProcessedChildNodes=new MacroProcessor(pageSpecHandler).process(structs);
      new PostProcessor(pageSpecHandler).process(allProcessedChildNodes);
      return pageSpecHandler.buildPageSpec();
    }
 catch (    SyntaxException ex) {
      String exceptionSource="<unknown location>";
      Integer lineNumber=-1;
      if (ex.getLine() != null) {
        exceptionSource=ex.getLine().getText();
        lineNumber=ex.getLine().getNumber();
      }
      throw new FileSyntaxException(ex,exceptionSource,lineNumber);
    }
  }
}
