package hudson.remoting;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URL;
public class Which {
  public static File jarFile(  Class clazz) throws IOException {
    ClassLoader cl=clazz.getClassLoader();
    if (cl == null)     cl=ClassLoader.getSystemClassLoader();
    URL res=cl.getResource(clazz.getName().replace('.','/') + ".class");
    if (res == null)     throw new IllegalArgumentException("Unable to locate class file for " + clazz);
    String resURL=res.toExternalForm();
    String originalURL=resURL;
    if (resURL.startsWith("jar:")) {
      resURL=resURL.substring(4,resURL.lastIndexOf('!'));
      return new File(decode(new URL(resURL).getPath()));
    }
    if (resURL.startsWith("code-source:/")) {
      resURL=resURL.substring("code-source:/".length(),resURL.lastIndexOf('!'));
      return new File(decode(new URL(resURL).getPath()));
    }
    if (resURL.startsWith("file:")) {
      int n=clazz.getName().split("\\.").length;
      for (; n > 0; n--) {
        int idx=Math.max(resURL.lastIndexOf('/'),resURL.lastIndexOf('\\'));
        if (idx < 0)         throw new IllegalArgumentException(originalURL + " - " + resURL);
        resURL=resURL.substring(0,idx);
      }
      return new File(decode(new URL(resURL).getPath()));
    }
    throw new IllegalArgumentException(originalURL + " - " + resURL);
  }
  private static String decode(  String s){
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    for (int i=0; i < s.length(); i++) {
      char ch=s.charAt(i);
      if (ch == '%') {
        baos.write(hexToInt(s.charAt(i + 1)) * 16 + hexToInt(s.charAt(i + 2)));
        i+=2;
        continue;
      }
      baos.write(ch);
    }
    try {
      return new String(baos.toByteArray(),"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
      throw new Error(e);
    }
  }
  private static int hexToInt(  int ch){
    return Character.getNumericValue(ch);
  }
}
