package net.java.sip.communicator.impl.globalshortcut;
import java.awt.*;
import java.util.*;
import java.util.List;
import net.java.sip.communicator.service.globalshortcut.*;
import net.java.sip.communicator.service.gui.*;
import net.java.sip.communicator.service.keybindings.*;
public class UIShortcut implements GlobalShortcutListener {
  private KeybindingsService keybindingsService=GlobalShortcutActivator.getKeybindingsService();
  public void shortcutReceived(  GlobalShortcutEvent evt){
    AWTKeyStroke keystroke=evt.getKeyStroke();
    GlobalKeybindingSet set=keybindingsService.getGlobalBindings();
    for (    Map.Entry<String,List<AWTKeyStroke>> entry : set.getBindings().entrySet()) {
      for (      AWTKeyStroke ks : entry.getValue()) {
        if (entry.getKey().equals("contactlist") && keystroke.getKeyCode() == ks.getKeyCode() && keystroke.getModifiers() == ks.getModifiers()) {
          ExportedWindow window=GlobalShortcutActivator.getUIService().getExportedWindow(ExportedWindow.MAIN_WINDOW);
          if (window == null)           return;
          if (!window.isVisible()) {
            window.bringToFront();
            window.setVisible(true);
            if (window instanceof Window) {
              ((Window)window).setAlwaysOnTop(true);
              ((Window)window).setAlwaysOnTop(false);
            }
          }
 else {
            window.setVisible(false);
          }
        }
      }
    }
  }
}
