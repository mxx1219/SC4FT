package com.navercorp.pinpoint.web.vo.stat.chart;
import com.navercorp.pinpoint.web.util.TimeWindow;
import com.navercorp.pinpoint.web.vo.stat.AggreJoinActiveTraceBo;
import com.navercorp.pinpoint.web.vo.stat.chart.ActiveTracePoint.UncollectedActiveTracePointCreater;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
public class ApplicationActiveTraceChartGroup implements ApplicationStatChartGroup {
  public static final UncollectedActiveTracePointCreater UNCOLLECTED_ACTIVE_TRACT_POINT=new ActiveTracePoint.UncollectedActiveTracePointCreater();
  private final Map<ChartType,Chart> activeTraceChartMap;
  public enum ActiveTraceChartType;
{
  }
  public ApplicationActiveTraceChartGroup(  TimeWindow timeWindow,  List<AggreJoinActiveTraceBo> AggreJoinActiveTraceBoList){
    activeTraceChartMap=new HashMap<>();
    List<Point> activeTraceList=new ArrayList<>(AggreJoinActiveTraceBoList.size());
    for (    AggreJoinActiveTraceBo aggreJoinActiveTraceBo : AggreJoinActiveTraceBoList) {
      activeTraceList.add(new ActiveTracePoint(aggreJoinActiveTraceBo.getTimestamp(),aggreJoinActiveTraceBo.getMinTotalCount(),aggreJoinActiveTraceBo.getMinTotalCountAgentId(),aggreJoinActiveTraceBo.getMaxTotalCount(),aggreJoinActiveTraceBo.getMaxTotalCountAgentId(),aggreJoinActiveTraceBo.getTotalCount()));
    }
    activeTraceChartMap.put(ActiveTraceChartType.ACTIVE_TRACE_COUNT,new TimeSeriesChartBuilder(timeWindow,UNCOLLECTED_ACTIVE_TRACT_POINT).build(activeTraceList));
  }
  @Override public Map<ChartType,Chart> getCharts(){
    return this.activeTraceChartMap;
  }
}
