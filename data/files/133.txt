package com.arialyy.aria.core.download;
import android.text.TextUtils;
import com.arialyy.aria.core.inf.AbsDownloadTarget;
import com.arialyy.aria.core.inf.AbsTarget;
import com.arialyy.aria.core.inf.AbsTaskEntity;
import com.arialyy.aria.orm.DbEntity;
import com.arialyy.aria.util.CommonUtil;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
abstract class BaseGroupTarget<TARGET extends AbsTarget,TASK_ENTITY extends AbsTaskEntity> extends AbsDownloadTarget<TARGET,DownloadGroupEntity,TASK_ENTITY> {
  List<String> mUrls=new ArrayList<>();
  String mGroupName;
  private List<String> mSubTaskFileName=new ArrayList<>();
  private boolean isSetDirPathed=false;
  DownloadGroupEntity getDownloadGroupEntity(){
    DownloadGroupEntity entity=DbEntity.findFirst(DownloadGroupEntity.class,"groupName=?",mGroupName);
    if (entity == null) {
      entity=new DownloadGroupEntity();
      entity.setGroupName(mGroupName);
      entity.setUrls(mUrls);
      entity.insert();
    }
    return entity;
  }
  public TARGET setGroupAlias(  String alias){
    if (TextUtils.isEmpty(alias))     return (TARGET)this;
    mEntity.setAlias(alias);
    mEntity.update();
    return (TARGET)this;
  }
  public TARGET setDownloadDirPath(  String groupDirPath){
    if (TextUtils.isEmpty(groupDirPath)) {
      throw new NullPointerException("任务组文件夹保存路径不能为null");
    }
    isSetDirPathed=true;
    if (mEntity.getDirPath().equals(groupDirPath))     return (TARGET)this;
    File file=new File(groupDirPath);
    if (file.exists() && file.isFile()) {
      throw new IllegalArgumentException("路径不能为文件");
    }
    if (!file.exists()) {
      file.mkdirs();
    }
    mEntity.setDirPath(groupDirPath);
    if (!TextUtils.isEmpty(mEntity.getDirPath())) {
      reChangeDirPath(groupDirPath);
    }
 else {
      mEntity.setSubTasks(createSubTask());
    }
    mEntity.update();
    return (TARGET)this;
  }
  private void reChangeDirPath(  String newDirPath){
    List<DownloadEntity> subTask=mEntity.getSubTask();
    if (subTask != null && !subTask.isEmpty()) {
      for (      DownloadEntity entity : subTask) {
        String oldPath=entity.getDownloadPath();
        String newPath=newDirPath + "/" + entity.getFileName();
        File file=new File(oldPath);
        file.renameTo(new File(newPath));
        DbEntity.exeSql("UPDATE DownloadEntity SET downloadPath='" + newPath + "' WHERE downloadPath='"+ oldPath+ "'");
        DbEntity.exeSql("UPDATE DownloadTaskEntity SET key='" + newPath + "' WHERE key='"+ oldPath+ "'");
      }
    }
 else {
      mEntity.setSubTasks(createSubTask());
    }
  }
  @Deprecated public TARGET setSubTaskFileName(  List<String> subTaskFileName){
    return setSubFileName(subTaskFileName);
  }
  public TARGET setSubFileName(  List<String> subTaskFileName){
    if (subTaskFileName == null || subTaskFileName.isEmpty())     return (TARGET)this;
    mSubTaskFileName.addAll(subTaskFileName);
    if (mUrls.size() != subTaskFileName.size()) {
      throw new IllegalArgumentException("下载链接数必须要和保存路径的数量一致");
    }
    if (isSetDirPathed) {
      List<DownloadEntity> entities=mEntity.getSubTask();
      int i=0;
      for (      DownloadEntity entity : entities) {
        String newName=mSubTaskFileName.get(i);
        updateSubFileName(entity,newName);
        i++;
      }
    }
    return (TARGET)this;
  }
  private void updateSubFileName(  DownloadEntity entity,  String newName){
    if (!newName.equals(entity.getFileName())) {
      String oldPath=mEntity.getDirPath() + "/" + entity.getFileName();
      String newPath=mEntity.getDirPath() + "/" + newName;
      File oldFile=new File(oldPath);
      if (oldFile.exists()) {
        oldFile.renameTo(new File(newPath));
      }
      CommonUtil.renameDownloadConfig(oldFile.getName(),newName);
      DbEntity.exeSql("UPDATE DownloadTaskEntity SET key='" + newPath + "' WHERE key='"+ oldPath+ "'");
      entity.setDownloadPath(newPath);
      entity.setFileName(newName);
      entity.update();
    }
  }
  private List<DownloadEntity> createSubTask(){
    List<DownloadEntity> list=new ArrayList<>();
    for (int i=0, len=mUrls.size(); i < len; i++) {
      DownloadEntity entity=new DownloadEntity();
      entity.setUrl(mUrls.get(i));
      String fileName=mSubTaskFileName.isEmpty() ? createFileName(entity.getUrl()) : mSubTaskFileName.get(i);
      entity.setDownloadPath(mEntity.getDirPath() + "/" + fileName);
      entity.setGroupName(mGroupName);
      entity.setGroupChild(true);
      entity.setFileName(fileName);
      entity.insert();
      list.add(entity);
    }
    return list;
  }
}
