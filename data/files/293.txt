package com.facebook.presto.spi.type;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.block.Block;
import com.facebook.presto.spi.type.DateTimeEncoding.unpackMillisUtc;
import com.facebook.presto.spi.type.TypeSignature.parseTypeSignature;
public final class TimestampWithTimeZoneType extends AbstractLongType {
  public static final TimestampWithTimeZoneType TIMESTAMP_WITH_TIME_ZONE=new TimestampWithTimeZoneType();
  private TimestampWithTimeZoneType(){
    super(parseTypeSignature(StandardTypes.TIMESTAMP_WITH_TIME_ZONE));
  }
  @Override public Object getObjectValue(  ConnectorSession session,  Block block,  int position){
    if (block.isNull(position)) {
      return null;
    }
    return new SqlTimestampWithTimeZone(block.getLong(position,0));
  }
  @Override public boolean equalTo(  Block leftBlock,  int leftPosition,  Block rightBlock,  int rightPosition){
    long leftValue=unpackMillisUtc(leftBlock.getLong(leftPosition,0));
    long rightValue=unpackMillisUtc(rightBlock.getLong(rightPosition,0));
    return leftValue == rightValue;
  }
  @Override public long hash(  Block block,  int position){
    return unpackMillisUtc(block.getLong(position,0));
  }
  @Override public int compareTo(  Block leftBlock,  int leftPosition,  Block rightBlock,  int rightPosition){
    long leftValue=unpackMillisUtc(leftBlock.getLong(leftPosition,0));
    long rightValue=unpackMillisUtc(rightBlock.getLong(rightPosition,0));
    return Long.compare(leftValue,rightValue);
  }
  @Override @SuppressWarnings("EqualsWhichDoesntCheckParameterClass") public boolean equals(  Object other){
    return other == TIMESTAMP_WITH_TIME_ZONE;
  }
  @Override public int hashCode(){
    return getClass().hashCode();
  }
}
