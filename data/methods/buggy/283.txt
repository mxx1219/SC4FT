@Override protected Composite createDialogArea(Composite parent){
  sqlGenerator.setFullyQualifiedNames(getDialogBoundsSettings().get(PROP_USE_FQ_NAMES) == null || getDialogBoundsSettings().getBoolean(PROP_USE_FQ_NAMES));
  sqlGenerator.setCompactSQL(getDialogBoundsSettings().get(PROP_USE_COMPACT_SQL) != null && getDialogBoundsSettings().getBoolean(PROP_USE_COMPACT_SQL));
  boolean supportPermissions=false;
  boolean supportComments=false;
  boolean supportFullDDL=false;
  for (  Object object : sqlGenerator.getObjects()) {
    DBPScriptObjectExt2 sourceObject=(DBPScriptObjectExt2)object;
    if (sourceObject.supportsObjectDefinitionOption(DBPScriptObject.OPTION_INCLUDE_PERMISSIONS)) {
      supportPermissions=true;
    }
    if (sourceObject.supportsObjectDefinitionOption(DBPScriptObject.OPTION_INCLUDE_COMMENTS)) {
      supportComments=true;
    }
    if (sourceObject.supportsObjectDefinitionOption(DBPScriptObject.OPTION_INCLUDE_NESTED_OBJECTS)) {
      supportFullDDL=true;
    }
    if (supportPermissions && supportComments && supportFullDDL) {
      break;
    }
  }
  sqlGenerator.setShowPermissions(getDialogBoundsSettings().get(DBPScriptObject.OPTION_INCLUDE_PERMISSIONS) != null && getDialogBoundsSettings().getBoolean(DBPScriptObject.OPTION_INCLUDE_PERMISSIONS));
  sqlGenerator.setShowComments(getDialogBoundsSettings().get(DBPScriptObject.OPTION_INCLUDE_COMMENTS) != null && getDialogBoundsSettings().getBoolean(DBPScriptObject.OPTION_INCLUDE_COMMENTS));
  sqlGenerator.setShowFullDdl(getDialogBoundsSettings().get(DBPScriptObject.OPTION_INCLUDE_NESTED_OBJECTS) != null && getDialogBoundsSettings().getBoolean(DBPScriptObject.OPTION_INCLUDE_NESTED_OBJECTS));
  UIUtils.runInUI(sqlGenerator);
  Object sql=sqlGenerator.getResult();
  if (sql != null) {
    setSQLText(CommonUtils.toString(sql));
  }
  Composite composite=super.createDialogArea(parent);
  Group settings=UIUtils.createControlGroup(composite,"Settings",5,GridData.FILL_HORIZONTAL,SWT.DEFAULT);
  Button useFQNames=UIUtils.createCheckbox(settings,"Use fully qualified names",sqlGenerator.isFullyQualifiedNames());
  useFQNames.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      sqlGenerator.setFullyQualifiedNames(useFQNames.getSelection());
      getDialogBoundsSettings().put(PROP_USE_FQ_NAMES,useFQNames.getSelection());
      UIUtils.runInUI(sqlGenerator);
      Object sql=sqlGenerator.getResult();
      if (sql != null) {
        setSQLText(CommonUtils.toString(sql));
        updateSQL();
      }
    }
  }
);
  Button useCompactSQL=UIUtils.createCheckbox(settings,"Compact SQL",sqlGenerator.isCompactSQL());
  useCompactSQL.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      sqlGenerator.setCompactSQL(useCompactSQL.getSelection());
      getDialogBoundsSettings().put(PROP_USE_COMPACT_SQL,useCompactSQL.getSelection());
      UIUtils.runInUI(sqlGenerator);
      Object sql=sqlGenerator.getResult();
      if (sql != null) {
        setSQLText(CommonUtils.toString(sql));
        updateSQL();
      }
    }
  }
);
  if (supportComments) {
    Button useShowComments=UIUtils.createCheckbox(settings,"Show comments",sqlGenerator.isShowComments());
    useShowComments.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        sqlGenerator.setShowComments(useShowComments.getSelection());
        getDialogBoundsSettings().put(DBPScriptObject.OPTION_INCLUDE_COMMENTS,useShowComments.getSelection());
        UIUtils.runInUI(sqlGenerator);
        Object sql=sqlGenerator.getResult();
        if (sql != null) {
          setSQLText(CommonUtils.toString(sql));
          updateSQL();
        }
      }
    }
);
  }
  if (supportPermissions) {
    Button useShowPermissions=UIUtils.createCheckbox(settings,"Show permissions",sqlGenerator.isIncludePermissions());
    useShowPermissions.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        sqlGenerator.setShowPermissions(useShowPermissions.getSelection());
        getDialogBoundsSettings().put(DBPScriptObject.OPTION_INCLUDE_PERMISSIONS,useShowPermissions.getSelection());
        UIUtils.runInUI(sqlGenerator);
        Object sql=sqlGenerator.getResult();
        if (sql != null) {
          setSQLText(CommonUtils.toString(sql));
          updateSQL();
        }
      }
    }
);
  }
  if (supportFullDDL) {
    Button useShowFullDdl=UIUtils.createCheckbox(settings,"Show full DDL",sqlGenerator.isShowFullDdl());
    useShowFullDdl.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        sqlGenerator.setShowFullDdl(useShowFullDdl.getSelection());
        getDialogBoundsSettings().put(DBPScriptObject.OPTION_INCLUDE_COMMENTS,useShowFullDdl.getSelection());
        UIUtils.runInUI(sqlGenerator);
        Object sql=sqlGenerator.getResult();
        if (sql != null) {
          setSQLText(CommonUtils.toString(sql));
          updateSQL();
        }
      }
    }
);
  }
  return composite;
}
