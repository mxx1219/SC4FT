public MovingAverageLimitAdapter(@NonNull AdaptiveBulkheadConfig config,Consumer<BulkheadLimit> publishEventConsumer){
  initialMaxLatency=config.getMaxAcceptableRequestLatency();
  desirableLatency=config.getDesirableOperationLatency();
  LOW_LATENCY_MUL=config.getLowLatencyMultiplier();
  CONCURRENCY_DROP_MUL=config.getConcurrencyDropMultiplier();
  currentMaxLatency=min(config.getDesirableOperationLatency() * 1.2d,config.getMaxAcceptableRequestLatency());
  int adaptationWindowSize=(int)ceil(config.getWindowForAdaptation().getSeconds() * config.getDesirableAverageThroughput());
  int reconfigurationWindowSize=(int)ceil(config.getWindowForReconfiguration().getSeconds() / config.getWindowForAdaptation().getSeconds());
  long initialLatencyInNanos=(long)(config.getDesirableOperationLatency() * NANO_SCALE);
  adaptationWindow=new MovingAverageWindow(adaptationWindowSize,initialLatencyInNanos);
  reconfigurationWindow=new MovingAverageWindow(reconfigurationWindowSize,initialLatencyInNanos);
  this.publishEventConsumer=publishEventConsumer;
}
