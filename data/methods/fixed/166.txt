@Test public void requestRace(){
  Flowable<Object> source=Flowable.generate(new Callable<Object>(){
    @Override public Object call() throws Exception {
      return 1;
    }
  }
,new BiConsumer<Object,Emitter<Object>>(){
    @Override public void accept(    Object s,    Emitter<Object> e) throws Exception {
      e.onNext(1);
    }
  }
,Functions.emptyConsumer());
  for (int i=0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {
    final TestSubscriber<Object> ts=source.test(0L);
    Runnable r=new Runnable(){
      @Override public void run(){
        for (int j=0; j < 500; j++) {
          ts.request(1);
        }
      }
    }
;
    TestHelper.race(r,r);
    ts.assertValueCount(1000);
  }
}
